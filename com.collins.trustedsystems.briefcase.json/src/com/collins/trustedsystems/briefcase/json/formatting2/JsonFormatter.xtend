/*
 * generated by Xtext
 */
package com.collins.trustedsystems.briefcase.json.formatting2;

import com.collins.trustedsystems.briefcase.json.json.JsonAnnexArray;
import com.collins.trustedsystems.briefcase.json.json.JsonAnnexElement;
import com.collins.trustedsystems.briefcase.json.json.JsonAnnexLibrary;
import com.collins.trustedsystems.briefcase.json.json.JsonAnnexMember;
import com.collins.trustedsystems.briefcase.json.json.JsonAnnexObject;
import com.collins.trustedsystems.briefcase.json.json.JsonAnnexSubclause;
import org.osate.xtext.aadl2.properties.formatting2.PropertiesFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument

class JsonFormatter extends PropertiesFormatter {
	
	//@Inject extension JsonGrammarAccess

	def dispatch void format(JsonAnnexLibrary jsonannexlibrary, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		jsonannexlibrary.getJsonAnnexElement().surround[noIndentation].prepend[newLines=1];
		format(jsonannexlibrary.getJsonAnnexElement(), document);
	}

	def dispatch void format(JsonAnnexSubclause jsonannexsubclause, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		jsonannexsubclause.getJsonAnnexElement().surround[noIndentation].prepend[newLines=1];
		format(jsonannexsubclause.getJsonAnnexElement(), document);
	}

	def dispatch void format(JsonAnnexObject jsonannexobject, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		jsonannexobject.regionFor.keywords(",").forEach[append[newLine]];
		jsonannexobject.regionFor.keyword("{").append[newLine];
		jsonannexobject.regionFor.keyword("}").prepend[newLine];
		for (JsonAnnexMember jsonAnnexMembers : jsonannexobject.getJsonAnnexMembers()) {
			jsonAnnexMembers.surround[indent];
			format(jsonAnnexMembers, document);
		}
	}

	def dispatch void format(JsonAnnexArray jsonannexarray, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		jsonannexarray.regionFor.keywords(",").forEach[append[newLine]];
		jsonannexarray.regionFor.keyword("[").append[newLine];
		jsonannexarray.regionFor.keyword("]").prepend[newLine];
		for (JsonAnnexElement jsonAnnexElements : jsonannexarray.getJsonAnnexElements()) {
			jsonAnnexElements.surround[indent];
			format(jsonAnnexElements, document);
		}
	}

	def dispatch void format(JsonAnnexMember jsonannexmember, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc.
		jsonannexmember.regionFor.keyword(":").surround[oneSpace];
		format(jsonannexmember.getKey(), document);
		format(jsonannexmember.getJsonAnnexElement(), document);
	}
}
