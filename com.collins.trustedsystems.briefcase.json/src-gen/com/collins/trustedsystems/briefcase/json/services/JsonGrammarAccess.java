/*
 * generated by Xtext
 */
package com.collins.trustedsystems.briefcase.json.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.osate.xtext.aadl2.properties.services.PropertiesGrammarAccess;

@Singleton
public class JsonGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AnnexLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.AnnexLibrary");
		private final RuleCall cJsonAnnexLibraryParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnexLibrary aadl2::AnnexLibrary:
		//	JsonAnnexLibrary;
		@Override public ParserRule getRule() { return rule; }

		//JsonAnnexLibrary
		public RuleCall getJsonAnnexLibraryParserRuleCall() { return cJsonAnnexLibraryParserRuleCall; }
	}

	public class AnnexSubclauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.AnnexSubclause");
		private final RuleCall cJsonAnnexSubclauseParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnexSubclause aadl2::AnnexSubclause:
		//	JsonAnnexSubclause;
		@Override public ParserRule getRule() { return rule; }

		//JsonAnnexSubclause
		public RuleCall getJsonAnnexSubclauseParserRuleCall() { return cJsonAnnexSubclauseParserRuleCall; }
	}

	public class JsonAnnexLibraryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexLibrary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexLibraryAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cJsonAnnexElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cJsonAnnexElementJsonAnnexElementParserRuleCall_1_0 = (RuleCall)cJsonAnnexElementAssignment_1.eContents().get(0);
		
		//JsonAnnexLibrary:
		//	{JsonAnnexLibrary} jsonAnnexElement=JsonAnnexElement?;
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexLibrary} jsonAnnexElement=JsonAnnexElement?
		public Group getGroup() { return cGroup; }

		//{JsonAnnexLibrary}
		public Action getJsonAnnexLibraryAction_0() { return cJsonAnnexLibraryAction_0; }

		//jsonAnnexElement=JsonAnnexElement?
		public Assignment getJsonAnnexElementAssignment_1() { return cJsonAnnexElementAssignment_1; }

		//JsonAnnexElement
		public RuleCall getJsonAnnexElementJsonAnnexElementParserRuleCall_1_0() { return cJsonAnnexElementJsonAnnexElementParserRuleCall_1_0; }
	}

	public class JsonAnnexSubclauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexSubclause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexSubclauseAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cJsonAnnexElementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cJsonAnnexElementJsonAnnexElementParserRuleCall_1_0 = (RuleCall)cJsonAnnexElementAssignment_1.eContents().get(0);
		
		//JsonAnnexSubclause:
		//	{JsonAnnexSubclause} jsonAnnexElement=JsonAnnexElement?;
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexSubclause} jsonAnnexElement=JsonAnnexElement?
		public Group getGroup() { return cGroup; }

		//{JsonAnnexSubclause}
		public Action getJsonAnnexSubclauseAction_0() { return cJsonAnnexSubclauseAction_0; }

		//jsonAnnexElement=JsonAnnexElement?
		public Assignment getJsonAnnexElementAssignment_1() { return cJsonAnnexElementAssignment_1; }

		//JsonAnnexElement
		public RuleCall getJsonAnnexElementJsonAnnexElementParserRuleCall_1_0() { return cJsonAnnexElementJsonAnnexElementParserRuleCall_1_0; }
	}

	public class JsonAnnexElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cJsonAnnexObjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cJsonAnnexArrayParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJsonAnnexStringParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cJsonAnnexNumberParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cJsonAnnexBooleanParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cJsonAnnexNullParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//JsonAnnexElement:
		//	JsonAnnexObject | JsonAnnexArray | JsonAnnexString | JsonAnnexNumber | JsonAnnexBoolean | JsonAnnexNull;
		@Override public ParserRule getRule() { return rule; }

		//JsonAnnexObject | JsonAnnexArray | JsonAnnexString | JsonAnnexNumber | JsonAnnexBoolean | JsonAnnexNull
		public Alternatives getAlternatives() { return cAlternatives; }

		//JsonAnnexObject
		public RuleCall getJsonAnnexObjectParserRuleCall_0() { return cJsonAnnexObjectParserRuleCall_0; }

		//JsonAnnexArray
		public RuleCall getJsonAnnexArrayParserRuleCall_1() { return cJsonAnnexArrayParserRuleCall_1; }

		//JsonAnnexString
		public RuleCall getJsonAnnexStringParserRuleCall_2() { return cJsonAnnexStringParserRuleCall_2; }

		//JsonAnnexNumber
		public RuleCall getJsonAnnexNumberParserRuleCall_3() { return cJsonAnnexNumberParserRuleCall_3; }

		//JsonAnnexBoolean
		public RuleCall getJsonAnnexBooleanParserRuleCall_4() { return cJsonAnnexBooleanParserRuleCall_4; }

		//JsonAnnexNull
		public RuleCall getJsonAnnexNullParserRuleCall_5() { return cJsonAnnexNullParserRuleCall_5; }
	}

	public class JsonAnnexObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cJsonAnnexMembersAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_0_0 = (RuleCall)cJsonAnnexMembersAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cJsonAnnexMembersAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_1_1_0 = (RuleCall)cJsonAnnexMembersAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//JsonAnnexObject:
		//	{JsonAnnexObject} '{' (jsonAnnexMembers+=JsonAnnexMember (',' jsonAnnexMembers+=JsonAnnexMember)*)? '}';
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexObject} '{' (jsonAnnexMembers+=JsonAnnexMember (',' jsonAnnexMembers+=JsonAnnexMember)*)? '}'
		public Group getGroup() { return cGroup; }

		//{JsonAnnexObject}
		public Action getJsonAnnexObjectAction_0() { return cJsonAnnexObjectAction_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//(jsonAnnexMembers+=JsonAnnexMember (',' jsonAnnexMembers+=JsonAnnexMember)*)?
		public Group getGroup_2() { return cGroup_2; }

		//jsonAnnexMembers+=JsonAnnexMember
		public Assignment getJsonAnnexMembersAssignment_2_0() { return cJsonAnnexMembersAssignment_2_0; }

		//JsonAnnexMember
		public RuleCall getJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_0_0() { return cJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_0_0; }

		//(',' jsonAnnexMembers+=JsonAnnexMember)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//','
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//jsonAnnexMembers+=JsonAnnexMember
		public Assignment getJsonAnnexMembersAssignment_2_1_1() { return cJsonAnnexMembersAssignment_2_1_1; }

		//JsonAnnexMember
		public RuleCall getJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_1_1_0() { return cJsonAnnexMembersJsonAnnexMemberParserRuleCall_2_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class JsonAnnexArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJsonAnnexElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cJsonAnnexElementsJsonAnnexElementParserRuleCall_2_0 = (RuleCall)cJsonAnnexElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cJsonAnnexElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cJsonAnnexElementsJsonAnnexElementParserRuleCall_3_1_0 = (RuleCall)cJsonAnnexElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//JsonAnnexArray:
		//	{JsonAnnexArray} '[' jsonAnnexElements+=JsonAnnexElement? (',' jsonAnnexElements+=JsonAnnexElement)* ']';
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexArray} '[' jsonAnnexElements+=JsonAnnexElement? (',' jsonAnnexElements+=JsonAnnexElement)* ']'
		public Group getGroup() { return cGroup; }

		//{JsonAnnexArray}
		public Action getJsonAnnexArrayAction_0() { return cJsonAnnexArrayAction_0; }

		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//jsonAnnexElements+=JsonAnnexElement?
		public Assignment getJsonAnnexElementsAssignment_2() { return cJsonAnnexElementsAssignment_2; }

		//JsonAnnexElement
		public RuleCall getJsonAnnexElementsJsonAnnexElementParserRuleCall_2_0() { return cJsonAnnexElementsJsonAnnexElementParserRuleCall_2_0; }

		//(',' jsonAnnexElements+=JsonAnnexElement)*
		public Group getGroup_3() { return cGroup_3; }

		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//jsonAnnexElements+=JsonAnnexElement
		public Assignment getJsonAnnexElementsAssignment_3_1() { return cJsonAnnexElementsAssignment_3_1; }

		//JsonAnnexElement
		public RuleCall getJsonAnnexElementsJsonAnnexElementParserRuleCall_3_1_0() { return cJsonAnnexElementsJsonAnnexElementParserRuleCall_3_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class JsonAnnexMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyJsonAnnexStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cJsonAnnexElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cJsonAnnexElementJsonAnnexElementParserRuleCall_2_0 = (RuleCall)cJsonAnnexElementAssignment_2.eContents().get(0);
		
		//JsonAnnexMember:
		//	key=JsonAnnexString ':' jsonAnnexElement=JsonAnnexElement;
		@Override public ParserRule getRule() { return rule; }

		//key=JsonAnnexString ':' jsonAnnexElement=JsonAnnexElement
		public Group getGroup() { return cGroup; }

		//key=JsonAnnexString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//JsonAnnexString
		public RuleCall getKeyJsonAnnexStringParserRuleCall_0_0() { return cKeyJsonAnnexStringParserRuleCall_0_0; }

		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//jsonAnnexElement=JsonAnnexElement
		public Assignment getJsonAnnexElementAssignment_2() { return cJsonAnnexElementAssignment_2; }

		//JsonAnnexElement
		public RuleCall getJsonAnnexElementJsonAnnexElementParserRuleCall_2_0() { return cJsonAnnexElementJsonAnnexElementParserRuleCall_2_0; }
	}

	public class JsonAnnexStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueJsonStringParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//JsonAnnexString:
		//	{JsonAnnexString} value=JsonString;
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexString} value=JsonString
		public Group getGroup() { return cGroup; }

		//{JsonAnnexString}
		public Action getJsonAnnexStringAction_0() { return cJsonAnnexStringAction_0; }

		//value=JsonString
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//JsonString
		public RuleCall getValueJsonStringParserRuleCall_1_0() { return cValueJsonStringParserRuleCall_1_0; }
	}

	public class JsonAnnexNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexNumber");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cJsonAnnexIntegerAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cValueAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cValueSignedIntegerParserRuleCall_0_1_0 = (RuleCall)cValueAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cJsonAnnexRealAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueSignedRealParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		
		//JsonAnnexNumber:
		//	{JsonAnnexInteger} value=SignedInteger
		//	| {JsonAnnexReal} value=SignedReal;
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexInteger} value=SignedInteger | {JsonAnnexReal} value=SignedReal
		public Alternatives getAlternatives() { return cAlternatives; }

		//{JsonAnnexInteger} value=SignedInteger
		public Group getGroup_0() { return cGroup_0; }

		//{JsonAnnexInteger}
		public Action getJsonAnnexIntegerAction_0_0() { return cJsonAnnexIntegerAction_0_0; }

		//value=SignedInteger
		public Assignment getValueAssignment_0_1() { return cValueAssignment_0_1; }

		//SignedInteger
		public RuleCall getValueSignedIntegerParserRuleCall_0_1_0() { return cValueSignedIntegerParserRuleCall_0_1_0; }

		//{JsonAnnexReal} value=SignedReal
		public Group getGroup_1() { return cGroup_1; }

		//{JsonAnnexReal}
		public Action getJsonAnnexRealAction_1_0() { return cJsonAnnexRealAction_1_0; }

		//value=SignedReal
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }

		//SignedReal
		public RuleCall getValueSignedRealParserRuleCall_1_1_0() { return cValueSignedRealParserRuleCall_1_1_0; }
	}

	public class SignedIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.SignedInteger");
		private final RuleCall cINT_NUMBERTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//SignedInteger aadl2::Integer:
		//	INT_NUMBER;
		@Override public ParserRule getRule() { return rule; }

		//INT_NUMBER
		public RuleCall getINT_NUMBERTerminalRuleCall() { return cINT_NUMBERTerminalRuleCall; }
	}

	public class SignedRealElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.SignedReal");
		private final RuleCall cREAL_NUMBERTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//@Override
		//SignedReal aadl2::Real:
		//	REAL_NUMBER;
		@Override public ParserRule getRule() { return rule; }

		//REAL_NUMBER
		public RuleCall getREAL_NUMBERTerminalRuleCall() { return cREAL_NUMBERTerminalRuleCall; }
	}

	public class JsonAnnexBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cJsonAnnexTrueAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cTrueKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cJsonAnnexFalseAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cFalseKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		
		//JsonAnnexBoolean:
		//	{JsonAnnexTrue} 'true'
		//	| {JsonAnnexFalse} 'false';
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexTrue} 'true' | {JsonAnnexFalse} 'false'
		public Alternatives getAlternatives() { return cAlternatives; }

		//{JsonAnnexTrue} 'true'
		public Group getGroup_0() { return cGroup_0; }

		//{JsonAnnexTrue}
		public Action getJsonAnnexTrueAction_0_0() { return cJsonAnnexTrueAction_0_0; }

		//'true'
		public Keyword getTrueKeyword_0_1() { return cTrueKeyword_0_1; }

		//{JsonAnnexFalse} 'false'
		public Group getGroup_1() { return cGroup_1; }

		//{JsonAnnexFalse}
		public Action getJsonAnnexFalseAction_1_0() { return cJsonAnnexFalseAction_1_0; }

		//'false'
		public Keyword getFalseKeyword_1_1() { return cFalseKeyword_1_1; }
	}

	public class JsonAnnexNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonAnnexNull");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJsonAnnexNullAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNullKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//JsonAnnexNull:
		//	{JsonAnnexNull} 'null';
		@Override public ParserRule getRule() { return rule; }

		//{JsonAnnexNull} 'null'
		public Group getGroup() { return cGroup; }

		//{JsonAnnexNull}
		public Action getJsonAnnexNullAction_0() { return cJsonAnnexNullAction_0; }

		//'null'
		public Keyword getNullKeyword_1() { return cNullKeyword_1; }
	}

	public class JsonStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.JsonString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//JsonString aadl2::String:
		//	STRING
		//	//|	ESC_FWD_SLASH
		//;
		@Override public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	
	private final AnnexLibraryElements pAnnexLibrary;
	private final AnnexSubclauseElements pAnnexSubclause;
	private final JsonAnnexLibraryElements pJsonAnnexLibrary;
	private final JsonAnnexSubclauseElements pJsonAnnexSubclause;
	private final JsonAnnexElementElements pJsonAnnexElement;
	private final JsonAnnexObjectElements pJsonAnnexObject;
	private final JsonAnnexArrayElements pJsonAnnexArray;
	private final JsonAnnexMemberElements pJsonAnnexMember;
	private final JsonAnnexStringElements pJsonAnnexString;
	private final JsonAnnexNumberElements pJsonAnnexNumber;
	private final SignedIntegerElements pSignedInteger;
	private final SignedRealElements pSignedReal;
	private final JsonAnnexBooleanElements pJsonAnnexBoolean;
	private final JsonAnnexNullElements pJsonAnnexNull;
	private final TerminalRule tINT_NUMBER;
	private final TerminalRule tREAL_NUMBER;
	private final TerminalRule tSTRING;
	private final JsonStringElements pJsonString;
	
	private final Grammar grammar;

	private final PropertiesGrammarAccess gaProperties;

	@Inject
	public JsonGrammarAccess(GrammarProvider grammarProvider,
		PropertiesGrammarAccess gaProperties) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaProperties = gaProperties;
		this.pAnnexLibrary = new AnnexLibraryElements();
		this.pAnnexSubclause = new AnnexSubclauseElements();
		this.pJsonAnnexLibrary = new JsonAnnexLibraryElements();
		this.pJsonAnnexSubclause = new JsonAnnexSubclauseElements();
		this.pJsonAnnexElement = new JsonAnnexElementElements();
		this.pJsonAnnexObject = new JsonAnnexObjectElements();
		this.pJsonAnnexArray = new JsonAnnexArrayElements();
		this.pJsonAnnexMember = new JsonAnnexMemberElements();
		this.pJsonAnnexString = new JsonAnnexStringElements();
		this.pJsonAnnexNumber = new JsonAnnexNumberElements();
		this.pSignedInteger = new SignedIntegerElements();
		this.pSignedReal = new SignedRealElements();
		this.pJsonAnnexBoolean = new JsonAnnexBooleanElements();
		this.pJsonAnnexNull = new JsonAnnexNullElements();
		this.tINT_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.INT_NUMBER");
		this.tREAL_NUMBER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.REAL_NUMBER");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.collins.trustedsystems.briefcase.json.Json.STRING");
		this.pJsonString = new JsonStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.collins.trustedsystems.briefcase.json.Json".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public PropertiesGrammarAccess getPropertiesGrammarAccess() {
		return gaProperties;
	}

	
	//AnnexLibrary aadl2::AnnexLibrary:
	//	JsonAnnexLibrary;
	public AnnexLibraryElements getAnnexLibraryAccess() {
		return pAnnexLibrary;
	}
	
	public ParserRule getAnnexLibraryRule() {
		return getAnnexLibraryAccess().getRule();
	}

	//AnnexSubclause aadl2::AnnexSubclause:
	//	JsonAnnexSubclause;
	public AnnexSubclauseElements getAnnexSubclauseAccess() {
		return pAnnexSubclause;
	}
	
	public ParserRule getAnnexSubclauseRule() {
		return getAnnexSubclauseAccess().getRule();
	}

	//JsonAnnexLibrary:
	//	{JsonAnnexLibrary} jsonAnnexElement=JsonAnnexElement?;
	public JsonAnnexLibraryElements getJsonAnnexLibraryAccess() {
		return pJsonAnnexLibrary;
	}
	
	public ParserRule getJsonAnnexLibraryRule() {
		return getJsonAnnexLibraryAccess().getRule();
	}

	//JsonAnnexSubclause:
	//	{JsonAnnexSubclause} jsonAnnexElement=JsonAnnexElement?;
	public JsonAnnexSubclauseElements getJsonAnnexSubclauseAccess() {
		return pJsonAnnexSubclause;
	}
	
	public ParserRule getJsonAnnexSubclauseRule() {
		return getJsonAnnexSubclauseAccess().getRule();
	}

	//JsonAnnexElement:
	//	JsonAnnexObject | JsonAnnexArray | JsonAnnexString | JsonAnnexNumber | JsonAnnexBoolean | JsonAnnexNull;
	public JsonAnnexElementElements getJsonAnnexElementAccess() {
		return pJsonAnnexElement;
	}
	
	public ParserRule getJsonAnnexElementRule() {
		return getJsonAnnexElementAccess().getRule();
	}

	//JsonAnnexObject:
	//	{JsonAnnexObject} '{' (jsonAnnexMembers+=JsonAnnexMember (',' jsonAnnexMembers+=JsonAnnexMember)*)? '}';
	public JsonAnnexObjectElements getJsonAnnexObjectAccess() {
		return pJsonAnnexObject;
	}
	
	public ParserRule getJsonAnnexObjectRule() {
		return getJsonAnnexObjectAccess().getRule();
	}

	//JsonAnnexArray:
	//	{JsonAnnexArray} '[' jsonAnnexElements+=JsonAnnexElement? (',' jsonAnnexElements+=JsonAnnexElement)* ']';
	public JsonAnnexArrayElements getJsonAnnexArrayAccess() {
		return pJsonAnnexArray;
	}
	
	public ParserRule getJsonAnnexArrayRule() {
		return getJsonAnnexArrayAccess().getRule();
	}

	//JsonAnnexMember:
	//	key=JsonAnnexString ':' jsonAnnexElement=JsonAnnexElement;
	public JsonAnnexMemberElements getJsonAnnexMemberAccess() {
		return pJsonAnnexMember;
	}
	
	public ParserRule getJsonAnnexMemberRule() {
		return getJsonAnnexMemberAccess().getRule();
	}

	//JsonAnnexString:
	//	{JsonAnnexString} value=JsonString;
	public JsonAnnexStringElements getJsonAnnexStringAccess() {
		return pJsonAnnexString;
	}
	
	public ParserRule getJsonAnnexStringRule() {
		return getJsonAnnexStringAccess().getRule();
	}

	//JsonAnnexNumber:
	//	{JsonAnnexInteger} value=SignedInteger
	//	| {JsonAnnexReal} value=SignedReal;
	public JsonAnnexNumberElements getJsonAnnexNumberAccess() {
		return pJsonAnnexNumber;
	}
	
	public ParserRule getJsonAnnexNumberRule() {
		return getJsonAnnexNumberAccess().getRule();
	}

	//SignedInteger aadl2::Integer:
	//	INT_NUMBER;
	public SignedIntegerElements getSignedIntegerAccess() {
		return pSignedInteger;
	}
	
	public ParserRule getSignedIntegerRule() {
		return getSignedIntegerAccess().getRule();
	}

	//@Override
	//SignedReal aadl2::Real:
	//	REAL_NUMBER;
	public SignedRealElements getSignedRealAccess() {
		return pSignedReal;
	}
	
	public ParserRule getSignedRealRule() {
		return getSignedRealAccess().getRule();
	}

	//JsonAnnexBoolean:
	//	{JsonAnnexTrue} 'true'
	//	| {JsonAnnexFalse} 'false';
	public JsonAnnexBooleanElements getJsonAnnexBooleanAccess() {
		return pJsonAnnexBoolean;
	}
	
	public ParserRule getJsonAnnexBooleanRule() {
		return getJsonAnnexBooleanAccess().getRule();
	}

	//JsonAnnexNull:
	//	{JsonAnnexNull} 'null';
	public JsonAnnexNullElements getJsonAnnexNullAccess() {
		return pJsonAnnexNull;
	}
	
	public ParserRule getJsonAnnexNullRule() {
		return getJsonAnnexNullAccess().getRule();
	}

	//terminal INT_NUMBER:
	//	'-'? ('0' | '1'..'9') '0'..'9'*;
	public TerminalRule getINT_NUMBERRule() {
		return tINT_NUMBER;
	} 

	//terminal REAL_NUMBER:
	//	'-'? ('0' | '1'..'9') '0'..'9'* ('.' '0'..'9'+) (('e' | 'E') ('-' | '+')? '0'..'9'+)?;
	public TerminalRule getREAL_NUMBERRule() {
		return tREAL_NUMBER;
	} 

	//@Override
	//terminal STRING:
	//	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\' | '/') | !('\\' | '"'))* '"' |
	//	"'" ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\' | '/') | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//JsonString aadl2::String:
	//	STRING
	//	//|	ESC_FWD_SLASH
	//;
	public JsonStringElements getJsonStringAccess() {
		return pJsonString;
	}
	
	public ParserRule getJsonStringRule() {
		return getJsonStringAccess().getRule();
	}

	//PModel aadl2::Element:
	//	ContainedPropertyAssociation //| BasicPropertyAssociation | PropertyAssociation
	//;
	public PropertiesGrammarAccess.PModelElements getPModelAccess() {
		return gaProperties.getPModelAccess();
	}
	
	public ParserRule getPModelRule() {
		return getPModelAccess().getRule();
	}

	//// Properties
	//ContainedPropertyAssociation aadl2::PropertyAssociation:
	//	property=[aadl2::Property|QPREF] ('=>' | append?='+=>') constant?='constant'? (ownedValue+=OptionalModalPropertyValue
	//	(',' ownedValue+=OptionalModalPropertyValue)*) (AppliesToKeywords appliesTo+=ContainmentPath (','
	//	appliesTo+=ContainmentPath)*)? (InBindingKeywords '(' inBinding+=[aadl2::Classifier|QCREF] ')')?
	//	';';
	public PropertiesGrammarAccess.ContainedPropertyAssociationElements getContainedPropertyAssociationAccess() {
		return gaProperties.getContainedPropertyAssociationAccess();
	}
	
	public ParserRule getContainedPropertyAssociationRule() {
		return getContainedPropertyAssociationAccess().getRule();
	}

	//PropertyAssociation aadl2::PropertyAssociation:
	//	property=[aadl2::Property|QPREF] ('=>' | append?='+=>') constant?='constant'? (ownedValue+=OptionalModalPropertyValue
	//	(',' ownedValue+=OptionalModalPropertyValue)*) (InBindingKeywords '(' inBinding+=[aadl2::Classifier|QCREF] ')')?
	//	';';
	public PropertiesGrammarAccess.PropertyAssociationElements getPropertyAssociationAccess() {
		return gaProperties.getPropertyAssociationAccess();
	}
	
	public ParserRule getPropertyAssociationRule() {
		return getPropertyAssociationAccess().getRule();
	}

	//BasicPropertyAssociation aadl2::PropertyAssociation:
	//	property=[aadl2::Property|QPREF]
	//	'=>' ownedValue+=PropertyValue ';';
	public PropertiesGrammarAccess.BasicPropertyAssociationElements getBasicPropertyAssociationAccess() {
		return gaProperties.getBasicPropertyAssociationAccess();
	}
	
	public ParserRule getBasicPropertyAssociationRule() {
		return getBasicPropertyAssociationAccess().getRule();
	}

	//ContainmentPath aadl2::ContainedNamedElement:
	//	path=ContainmentPathElement
	//	//	( 'annex' containmentPathElement+=AnnexPath )?
	//;
	public PropertiesGrammarAccess.ContainmentPathElements getContainmentPathAccess() {
		return gaProperties.getContainmentPathAccess();
	}
	
	public ParserRule getContainmentPathRule() {
		return getContainmentPathAccess().getRule();
	}

	////AnnexPath returns aadl2::ContainmentPathElement:
	////	 namedElement=[aadl2::NamedElement|IDANNEXTEXT];
	//ModalPropertyValue aadl2::ModalPropertyValue:
	//	ownedValue=PropertyExpression
	//	InModesKeywords '('
	//	inMode+=[aadl2::Mode] (',' inMode+=[aadl2::Mode])*
	//	')';
	public PropertiesGrammarAccess.ModalPropertyValueElements getModalPropertyValueAccess() {
		return gaProperties.getModalPropertyValueAccess();
	}
	
	public ParserRule getModalPropertyValueRule() {
		return getModalPropertyValueAccess().getRule();
	}

	//OptionalModalPropertyValue aadl2::ModalPropertyValue:
	//	ownedValue=PropertyExpression (InModesKeywords '('
	//	inMode+=[aadl2::Mode] (',' inMode+=[aadl2::Mode])*
	//	')')?;
	public PropertiesGrammarAccess.OptionalModalPropertyValueElements getOptionalModalPropertyValueAccess() {
		return gaProperties.getOptionalModalPropertyValueAccess();
	}
	
	public ParserRule getOptionalModalPropertyValueRule() {
		return getOptionalModalPropertyValueAccess().getRule();
	}

	//// &&&&&&&&&& handling of in binding
	//PropertyValue aadl2::ModalPropertyValue:
	//	ownedValue=PropertyExpression;
	public PropertiesGrammarAccess.PropertyValueElements getPropertyValueAccess() {
		return gaProperties.getPropertyValueAccess();
	}
	
	public ParserRule getPropertyValueRule() {
		return getPropertyValueAccess().getRule();
	}

	//PropertyExpression aadl2::PropertyExpression:
	//	RecordTerm | ReferenceTerm | ComponentClassifierTerm
	//	| ComputedTerm | StringTerm | NumericRangeTerm
	//	| RealTerm | IntegerTerm
	//	| ListTerm
	//	| BooleanLiteral | LiteralorReferenceTerm;
	public PropertiesGrammarAccess.PropertyExpressionElements getPropertyExpressionAccess() {
		return gaProperties.getPropertyExpressionAccess();
	}
	
	public ParserRule getPropertyExpressionRule() {
		return getPropertyExpressionAccess().getRule();
	}

	//LiteralorReferenceTerm aadl2::NamedValue:
	//	namedValue=[aadl2::AbstractNamedValue|QPREF];
	public PropertiesGrammarAccess.LiteralorReferenceTermElements getLiteralorReferenceTermAccess() {
		return gaProperties.getLiteralorReferenceTermAccess();
	}
	
	public ParserRule getLiteralorReferenceTermRule() {
		return getLiteralorReferenceTermAccess().getRule();
	}

	//BooleanLiteral aadl2::BooleanLiteral:
	//	{aadl2::BooleanLiteral} (value?='true' | 'false');
	public PropertiesGrammarAccess.BooleanLiteralElements getBooleanLiteralAccess() {
		return gaProperties.getBooleanLiteralAccess();
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//ConstantValue aadl2::NamedValue:
	//	namedValue=[aadl2::PropertyConstant|QPREF];
	public PropertiesGrammarAccess.ConstantValueElements getConstantValueAccess() {
		return gaProperties.getConstantValueAccess();
	}
	
	public ParserRule getConstantValueRule() {
		return getConstantValueAccess().getRule();
	}

	//ReferenceTerm aadl2::ReferenceValue:
	//	'reference' '('
	//	path=ContainmentPathElement
	//	//	( 'annex' ID '{**' 
	//	//	containmentPathElement+=ContainmentPathElement
	//	//	( '.' containmentPathElement+=ContainmentPathElement)*
	//	//	'**}')?
	//	')';
	public PropertiesGrammarAccess.ReferenceTermElements getReferenceTermAccess() {
		return gaProperties.getReferenceTermAccess();
	}
	
	public ParserRule getReferenceTermRule() {
		return getReferenceTermAccess().getRule();
	}

	//RecordTerm aadl2::RecordValue:
	//	'['
	//	ownedFieldValue+=FieldPropertyAssociation+
	//	']';
	public PropertiesGrammarAccess.RecordTermElements getRecordTermAccess() {
		return gaProperties.getRecordTermAccess();
	}
	
	public ParserRule getRecordTermRule() {
		return getRecordTermAccess().getRule();
	}

	//OldRecordTerm aadl2::RecordValue:
	//	'('
	//	ownedFieldValue+=FieldPropertyAssociation+
	//	')';
	public PropertiesGrammarAccess.OldRecordTermElements getOldRecordTermAccess() {
		return gaProperties.getOldRecordTermAccess();
	}
	
	public ParserRule getOldRecordTermRule() {
		return getOldRecordTermAccess().getRule();
	}

	//ComputedTerm aadl2::ComputedValue:
	//	'compute' '('
	//	function=ID
	//	')';
	public PropertiesGrammarAccess.ComputedTermElements getComputedTermAccess() {
		return gaProperties.getComputedTermAccess();
	}
	
	public ParserRule getComputedTermRule() {
		return getComputedTermAccess().getRule();
	}

	//ComponentClassifierTerm aadl2::ClassifierValue:
	//	'classifier' '('
	//	classifier=[aadl2::ComponentClassifier|QCREF]
	//	')';
	public PropertiesGrammarAccess.ComponentClassifierTermElements getComponentClassifierTermAccess() {
		return gaProperties.getComponentClassifierTermAccess();
	}
	
	public ParserRule getComponentClassifierTermRule() {
		return getComponentClassifierTermAccess().getRule();
	}

	//ListTerm aadl2::ListValue:
	//	{aadl2::ListValue}
	//	'(' (ownedListElement+=PropertyExpression (',' ownedListElement+=PropertyExpression)*)?
	//	')';
	public PropertiesGrammarAccess.ListTermElements getListTermAccess() {
		return gaProperties.getListTermAccess();
	}
	
	public ParserRule getListTermRule() {
		return getListTermAccess().getRule();
	}

	//FieldPropertyAssociation aadl2::BasicPropertyAssociation:
	//	property=[aadl2::BasicProperty]
	//	'=>'
	//	ownedValue=PropertyExpression
	//	';';
	public PropertiesGrammarAccess.FieldPropertyAssociationElements getFieldPropertyAssociationAccess() {
		return gaProperties.getFieldPropertyAssociationAccess();
	}
	
	public ParserRule getFieldPropertyAssociationRule() {
		return getFieldPropertyAssociationAccess().getRule();
	}

	//// from AADL2
	//// need to add annex path element
	//ContainmentPathElement aadl2::ContainmentPathElement:
	//	(namedElement=[aadl2::NamedElement] arrayRange+=ArrayRange*) ('.' path=ContainmentPathElement)?
	//	//	 | 	 'annex' namedElement=[aadl2::NamedElement|ID]
	//;
	public PropertiesGrammarAccess.ContainmentPathElementElements getContainmentPathElementAccess() {
		return gaProperties.getContainmentPathElementAccess();
	}
	
	public ParserRule getContainmentPathElementRule() {
		return getContainmentPathElementAccess().getRule();
	}

	//ANNEXREF: // check what values are ok inside ** **
	//	'{' STAR STAR ID STAR STAR '}';
	public PropertiesGrammarAccess.ANNEXREFElements getANNEXREFAccess() {
		return gaProperties.getANNEXREFAccess();
	}
	
	public ParserRule getANNEXREFRule() {
		return getANNEXREFAccess().getRule();
	}

	//PlusMinus aadl2::OperationKind:
	//	'+' | '-';
	public PropertiesGrammarAccess.PlusMinusElements getPlusMinusAccess() {
		return gaProperties.getPlusMinusAccess();
	}
	
	public ParserRule getPlusMinusRule() {
		return getPlusMinusAccess().getRule();
	}

	//StringTerm aadl2::StringLiteral:
	//	value=NoQuoteString;
	public PropertiesGrammarAccess.StringTermElements getStringTermAccess() {
		return gaProperties.getStringTermAccess();
	}
	
	public ParserRule getStringTermRule() {
		return getStringTermAccess().getRule();
	}

	//NoQuoteString:
	//	super::STRING;
	public PropertiesGrammarAccess.NoQuoteStringElements getNoQuoteStringAccess() {
		return gaProperties.getNoQuoteStringAccess();
	}
	
	public ParserRule getNoQuoteStringRule() {
		return getNoQuoteStringAccess().getRule();
	}

	//ArrayRange aadl2::ArrayRange:
	//	{aadl2::ArrayRange}
	//	'[' lowerBound=INTVALUE ('..' upperBound=INTVALUE)?
	//	']';
	public PropertiesGrammarAccess.ArrayRangeElements getArrayRangeAccess() {
		return gaProperties.getArrayRangeAccess();
	}
	
	public ParserRule getArrayRangeRule() {
		return getArrayRangeAccess().getRule();
	}

	//SignedConstant aadl2::Operation:
	//	op=PlusMinus ownedPropertyExpression+=ConstantValue;
	public PropertiesGrammarAccess.SignedConstantElements getSignedConstantAccess() {
		return gaProperties.getSignedConstantAccess();
	}
	
	public ParserRule getSignedConstantRule() {
		return getSignedConstantAccess().getRule();
	}

	//IntegerTerm aadl2::IntegerLiteral:
	//	value=SignedInt unit=[aadl2::UnitLiteral]?;
	public PropertiesGrammarAccess.IntegerTermElements getIntegerTermAccess() {
		return gaProperties.getIntegerTermAccess();
	}
	
	public ParserRule getIntegerTermRule() {
		return getIntegerTermAccess().getRule();
	}

	//SignedInt aadl2::Integer:
	//	('+' | '-')? INTEGER_LIT;
	public PropertiesGrammarAccess.SignedIntElements getSignedIntAccess() {
		return gaProperties.getSignedIntAccess();
	}
	
	public ParserRule getSignedIntRule() {
		return getSignedIntAccess().getRule();
	}

	//RealTerm aadl2::RealLiteral:
	//	value=super::SignedReal unit=[aadl2::UnitLiteral]?;
	public PropertiesGrammarAccess.RealTermElements getRealTermAccess() {
		return gaProperties.getRealTermAccess();
	}
	
	public ParserRule getRealTermRule() {
		return getRealTermAccess().getRule();
	}

	//NumericRangeTerm aadl2::RangeValue:
	//	minimum=NumAlt //(RealTerm|IntegerTerm| SignedConstant | ConstantValue)  
	//	'..' maximum=NumAlt ('delta' delta=NumAlt //(RealTerm|IntegerTerm| SignedConstant | ConstantValue)
	//)?;
	public PropertiesGrammarAccess.NumericRangeTermElements getNumericRangeTermAccess() {
		return gaProperties.getNumericRangeTermAccess();
	}
	
	public ParserRule getNumericRangeTermRule() {
		return getNumericRangeTermAccess().getRule();
	}

	//NumAlt aadl2::PropertyExpression:
	//	RealTerm | IntegerTerm | SignedConstant | ConstantValue;
	public PropertiesGrammarAccess.NumAltElements getNumAltAccess() {
		return gaProperties.getNumAltAccess();
	}
	
	public ParserRule getNumAltRule() {
		return getNumAltAccess().getRule();
	}

	//AppliesToKeywords:
	//	'applies' 'to';
	public PropertiesGrammarAccess.AppliesToKeywordsElements getAppliesToKeywordsAccess() {
		return gaProperties.getAppliesToKeywordsAccess();
	}
	
	public ParserRule getAppliesToKeywordsRule() {
		return getAppliesToKeywordsAccess().getRule();
	}

	//InBindingKeywords:
	//	'in' 'binding';
	public PropertiesGrammarAccess.InBindingKeywordsElements getInBindingKeywordsAccess() {
		return gaProperties.getInBindingKeywordsAccess();
	}
	
	public ParserRule getInBindingKeywordsRule() {
		return getInBindingKeywordsAccess().getRule();
	}

	//InModesKeywords:
	//	'in' 'modes';
	public PropertiesGrammarAccess.InModesKeywordsElements getInModesKeywordsAccess() {
		return gaProperties.getInModesKeywordsAccess();
	}
	
	public ParserRule getInModesKeywordsRule() {
		return getInModesKeywordsAccess().getRule();
	}

	//terminal SL_COMMENT:
	//	'--' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaProperties.getSL_COMMENTRule();
	} 

	//INTVALUE aadl2::Integer:
	//	INTEGER_LIT //NUMERAL 	
	//;
	public PropertiesGrammarAccess.INTVALUEElements getINTVALUEAccess() {
		return gaProperties.getINTVALUEAccess();
	}
	
	public ParserRule getINTVALUERule() {
		return getINTVALUEAccess().getRule();
	}

	//terminal fragment EXPONENT:
	//	('e' | 'E') ('+' | '-')? DIGIT+;
	public TerminalRule getEXPONENTRule() {
		return gaProperties.getEXPONENTRule();
	} 

	//terminal fragment INT_EXPONENT:
	//	('e' | 'E') '+'? DIGIT+;
	public TerminalRule getINT_EXPONENTRule() {
		return gaProperties.getINT_EXPONENTRule();
	} 

	//terminal REAL_LIT:
	//	DIGIT+ ('_' DIGIT+)* ('.' DIGIT+ ('_' DIGIT+)* EXPONENT?);
	public TerminalRule getREAL_LITRule() {
		return gaProperties.getREAL_LITRule();
	} 

	//terminal INTEGER_LIT:
	//	DIGIT+ ('_' DIGIT+)* ('#' BASED_INTEGER '#' INT_EXPONENT? | INT_EXPONENT?);
	public TerminalRule getINTEGER_LITRule() {
		return gaProperties.getINTEGER_LITRule();
	} 

	//terminal fragment DIGIT:
	//	'0'..'9';
	public TerminalRule getDIGITRule() {
		return gaProperties.getDIGITRule();
	} 

	//terminal fragment EXTENDED_DIGIT:
	//	'0'..'9' | 'a'..'f' | 'A'..'F';
	public TerminalRule getEXTENDED_DIGITRule() {
		return gaProperties.getEXTENDED_DIGITRule();
	} 

	//terminal fragment BASED_INTEGER:
	//	EXTENDED_DIGIT ('_'? EXTENDED_DIGIT)*;
	public TerminalRule getBASED_INTEGERRule() {
		return gaProperties.getBASED_INTEGERRule();
	} 

	//QCLREF:
	//	ID '::' ID;
	public PropertiesGrammarAccess.QCLREFElements getQCLREFAccess() {
		return gaProperties.getQCLREFAccess();
	}
	
	public ParserRule getQCLREFRule() {
		return getQCLREFAccess().getRule();
	}

	//QPREF:
	//	ID ('::' ID)?;
	public PropertiesGrammarAccess.QPREFElements getQPREFAccess() {
		return gaProperties.getQPREFAccess();
	}
	
	public ParserRule getQPREFRule() {
		return getQPREFAccess().getRule();
	}

	//QCREF:
	//	(ID '::')* ID ('.' ID)?;
	public PropertiesGrammarAccess.QCREFElements getQCREFAccess() {
		return gaProperties.getQCREFAccess();
	}
	
	public ParserRule getQCREFRule() {
		return getQCREFAccess().getRule();
	}

	//STAR:
	//	'*';
	public PropertiesGrammarAccess.STARElements getSTARAccess() {
		return gaProperties.getSTARAccess();
	}
	
	public ParserRule getSTARRule() {
		return getSTARAccess().getRule();
	}

	//terminal ID:
	//	('a'..'z'
	//	| 'A'..'Z') ('_'? ('a'..'z'
	//	| 'A'..'Z'
	//	| '0'..'9'))*;
	public TerminalRule getIDRule() {
		return gaProperties.getIDRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaProperties.getWSRule();
	} 
}
